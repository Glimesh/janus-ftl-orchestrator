@startuml
autonumber
title Typical FTL Orchestration Service Flow

actor nyStreamer as "NYC Streamer"
participant nyc as "Janus NYC Ingest"
participant orchestrator as "FTL Orchestration Service"
participant sea as "Janus SEA Edge"
actor seaViewer as "SEA Viewer"

== FTL Instance Registration ==
nyc --> orchestrator: Intro Request
note left
    Ingest server registers
    with the Orchestration Service
end note
nyc <-- orchestrator: Intro Response
sea --> orchestrator: Intro Request
note right
    Edge server registers
    with the Orchestration Service
end note
sea <-- orchestrator: Intro Response

== Streamer Starts Streaming ==
nyStreamer -> nyc: New stream starts for channel 1
note left
    Streamer begins streaming
end note
nyc --> orchestrator: Stream Available Request
nyc <-- orchestrator: Stream Available Response

== Viewer Starts Viewing ==
seaViewer -> sea: Request to watch channel 1
note right
    Viewer starts watching
end note
sea --> orchestrator: Subscribe Channel Request
note right
    A new stream key for this channel is
    generated and sent with this request
end note
sea <-- orchestrator: Subscribe Channel Response
nyc <-- orchestrator: Stream Start Relay
sea <-- nyc: Channel 1 stream relayed via FTL
note left
    The stream key for FTL relay is sent
    with the Start Relay message
end note
sea --> seaViewer: Channel 1 stream is delivered via WebRTC

== Streamer Stops Streaming ==
nyStreamer -> nyc: Stream stops for channel 1
note left
    Streamer stops streaming
end note
nyc --> orchestrator: Stream removed request
nyc <-- orchestrator: Stream removed response
nyc --X sea: Channel 1 stream relay is ended
sea --> seaViewer: Channel 1 stream ended
@enduml