syntax = "proto3";

package orchestrator;

message Stream {
  uint32 stream_id = 1;
  uint32 channel_id = 2;
}

message Subscription {
  uint32 stream_id = 1;
  uint32 channel_id = 2;
  bytes stream_key = 4;
}

message Relay {
  uint32 stream_id = 1;
  uint32 channel_id = 2;
  string target_node_name = 3;
  string target_hostname = 4;
  bytes target_stream_key = 5;
}

service FtlOrchestrator {
  rpc CreateStream (CreateStreamRequest) returns (CreateStreamResponse) {}
  rpc DeleteStream (DeleteStreamRequest) returns (DeleteStreamResponse) {}

  rpc CreateSubscription (CreateSubscriptionRequest) returns (CreateSubscriptionResponse) {}
  rpc DeleteSubscription (DeleteSubscriptionRequest) returns (DeleteSubscriptionResponse) {}
  
  rpc CreateNode (CreateNodeRequest) returns (CreateNodeResponse) {}
  rpc GetNode (GetNodeRequest) returns (GetNodeResponse) {}
  rpc DeleteNode (DeleteNodeRequest) returns (DeleteNodeResponse) {}
  
  rpc UpdateNodeStatus (UpdateNodeStatusRequest) returns (UpdateNodeStatusResponse) {}
  
  rpc WatchRoutes (WatchRoutesRequest) returns (stream WatchRoutesResponse) {}
}

message CreateStreamRequest {
  string node_name = 1;
  uint32 stream_id = 2;
  uint32 channel_id = 3;
}

message CreateStreamResponse {}

message DeleteStreamRequest {
  string node_name = 1;
  uint32 stream_id = 2;
}

message DeleteStreamResponse {}

message CreateSubscriptionRequest {
  string node_name = 1;
  uint32 channel_id = 2;
  // Stream key to be used when relaying the channel to this node
  bytes stream_key = 3;
}

message CreateSubscriptionResponse {}

message DeleteSubscriptionRequest {
  string node_name = 1;
  uint32 channel_id = 2;
}

message DeleteSubscriptionResponse {}

message CreateNodeRequest {
  string node_name = 1;
  string hostname = 2;
}

message CreateNodeResponse {
}

message GetNodeRequest {
  string node_name = 1;
}

message GetNodeResponse {
  string node_name = 1;
  string hostname = 2;}

message DeleteNodeRequest {
  string node_name = 1;
}

message DeleteNodeResponse {}

message UpdateNodeStatusRequest {
  string node_name = 1;
  uint32 current_load = 2;
  uint32 maximum_load = 3;
}

message UpdateNodeStatusResponse {}

message WatchRoutesRequest {
  string node_name = 1;
}

message WatchRoutesResponse {
  repeated Stream streams = 1;
  repeated Subscription subscriptions = 2;
  repeated Relay relays = 3;
}
